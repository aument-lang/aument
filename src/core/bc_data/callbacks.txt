static void *cb[] = {
&&CASE(AU_OP_LOAD_SELF),
&&CASE(AU_OP_MOV_U16),
&&CASE(AU_OP_MOV_REG_LOCAL),
&&CASE(AU_OP_MOV_LOCAL_REG),
&&CASE(AU_OP_MOV_BOOL),
&&CASE(AU_OP_LOAD_NIL),
&&CASE(AU_OP_LOAD_CONST),
&&CASE(AU_OP_SET_CONST),
&&CASE(AU_OP_MUL),
&&CASE(AU_OP_DIV),
&&CASE(AU_OP_ADD),
&&CASE(AU_OP_SUB),
&&CASE(AU_OP_MOD),
&&CASE(AU_OP_NOT),
&&CASE(AU_OP_EQ),
&&CASE(AU_OP_NEQ),
&&CASE(AU_OP_LT),
&&CASE(AU_OP_GT),
&&CASE(AU_OP_LEQ),
&&CASE(AU_OP_GEQ),
&&CASE(AU_OP_JIF),
&&CASE(AU_OP_JNIF),
&&CASE(AU_OP_JREL),
&&CASE(AU_OP_JRELB),
&&CASE(AU_OP_CALL),
&&CASE(AU_OP_CALL_CATCH),
&&CASE(AU_OP_RET_LOCAL),
&&CASE(AU_OP_RET),
&&CASE(AU_OP_RET_NULL),
&&CASE(AU_OP_IMPORT),
&&CASE(AU_OP_ARRAY_NEW),
&&CASE(AU_OP_ARRAY_PUSH),
&&CASE(AU_OP_IDX_GET),
&&CASE(AU_OP_IDX_SET),
&&CASE(AU_OP_TUPLE_NEW),
&&CASE(AU_OP_IDX_SET_STATIC),
&&CASE(AU_OP_DICT_NEW),
&&CASE(AU_OP_CLASS_NEW),
&&CASE(AU_OP_CLASS_NEW_INITIALZIED),
&&CASE(AU_OP_CLASS_GET_INNER),
&&CASE(AU_OP_CLASS_SET_INNER),
&&CASE(AU_OP_LOAD_FUNC),
&&CASE(AU_OP_BIND_ARG_TO_FUNC),
&&CASE(AU_OP_CALL_FUNC_VALUE),
&&CASE(AU_OP_CALL_FUNC_VALUE_CATCH),
&&CASE(AU_OP_RAISE),
&&CASE(AU_OP_PRINT),
&&CASE(AU_OP_PUSH_ARG),
&&CASE(AU_OP_NOP),
&&CASE(AU_OP_BOR),
&&CASE(AU_OP_BXOR),
&&CASE(AU_OP_BAND),
&&CASE(AU_OP_BSHL),
&&CASE(AU_OP_BSHR),
&&CASE(AU_OP_BNOT),
&&CASE(AU_OP_NEG),
&&CASE(AU_OP_MUL_INT),
&&CASE(AU_OP_DIV_INT),
&&CASE(AU_OP_ADD_INT),
&&CASE(AU_OP_SUB_INT),
&&CASE(AU_OP_MOD_INT),
&&CASE(AU_OP_EQ_INT),
&&CASE(AU_OP_NEQ_INT),
&&CASE(AU_OP_LT_INT),
&&CASE(AU_OP_GT_INT),
&&CASE(AU_OP_LEQ_INT),
&&CASE(AU_OP_GEQ_INT),
&&CASE(AU_OP_JIF_BOOL),
&&CASE(AU_OP_JNIF_BOOL),
&&CASE(AU_OP_MUL_DOUBLE),
&&CASE(AU_OP_DIV_DOUBLE),
&&CASE(AU_OP_ADD_DOUBLE),
&&CASE(AU_OP_SUB_DOUBLE),
&&CASE(AU_OP_EQ_DOUBLE),
&&CASE(AU_OP_NEQ_DOUBLE),
&&CASE(AU_OP_LT_DOUBLE),
&&CASE(AU_OP_GT_DOUBLE),
&&CASE(AU_OP_LEQ_DOUBLE),
&&CASE(AU_OP_GEQ_DOUBLE),
};
